[
    "constructor(tuple(address endpoint, bytes config)[] _plugins, address _wEth) payable",
    "error AlreadyExists()",
    "error CallbackFailed()",
    "error InvalidAmountOut()",
    "error InvalidAsset()",
    "error InvalidCollateralAmount()",
    "error InvalidLeverage()",
    "error InvalidMode()",
    "error InvalidOpts()",
    "error NothingToDeleverage()",
    "error ReentrancyGuardReentrantCall()",
    "error SafeERC20FailedOperation(address token)",
    "error UnknownMarket()",
    "error UnknownPlugin()",
    "event Executed(address indexed user, address indexed comet, address indexed collateral, uint256 totalAmount, uint256 debtAmount)",
    "event PluginAdded(address indexed endpoint, bytes4 indexed selector, bytes32 key)",
    "event Withdrawn(address indexed user, address indexed comet, address indexed collateral, uint256 withdrawnAmount, uint256 baseReturned)",
    "function FACTOR_SCALE() view returns (uint64)",
    "function PRECISION() view returns (uint16)",
    "function executeMultiplier(tuple(address comet, address flp, address loanPlugin, address swapPlugin) opts, address collateral, uint256 collateralAmount, uint256 leverage, bytes swapData, uint256 minAmountOut) payable",
    "function executeMultiplierBySig(tuple(address comet, address flp, address loanPlugin, address swapPlugin) opts, address collateral, uint256 collateralAmount, uint256 leverage, bytes swapData, uint256 minAmountOut, tuple(uint256 nonce, uint256 expiry, bytes32 r, bytes32 s, uint8 v) allowParams) payable",
    "function plugins(bytes32) view returns (bytes)",
    "function wEth() view returns (address)",
    "function withdrawMultiplier(tuple(address comet, address flp, address loanPlugin, address swapPlugin) opts, address collateral, uint256 collateralAmount, bytes swapData, uint256 minAmountOut)",
    "function withdrawMultiplierBySig(tuple(address comet, address flp, address loanPlugin, address swapPlugin) opts, address collateral, uint256 collateralAmount, bytes swapData, uint256 minAmountOut, tuple(uint256 nonce, uint256 expiry, bytes32 r, bytes32 s, uint8 v) allowParams)"
]
